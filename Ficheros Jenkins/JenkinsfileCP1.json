pipeline{
    
    agent any
    
    stages{
        
        stage('Get Codes') {
            parallel{
                stage('Get Code windows'){
                    agent{
                        label 'windows'
                    }
                    steps{
                        // obtener el codigo del repo
                        git 'https://github.com/migpar/helloworld.git'
                    }
                }   

                stage('Get Code linux'){
                    agent{
                        label 'linux'
                    }
                    steps{
                        // obtener el codigo del repo
                        git 'https://github.com/migpar/helloworld.git'
                    }
                } 
            }
        }  
            
        
        stage('build') {
            steps {
                echo 'Eyy, esto es python, No hay que compilar nada!!'
                echo WORKSPACE
                bat 'dir'
            }
        }

        stage('Test Stages') {
            parallel{

                stage('Unit') {
                    agent{
                        label 'localWin'
                    }

                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE' ){
                             
                            bat '''
                                set PYTHONPATH=%WORKSPACE%
                                C:\\Users\\miguel\\AppData\\Local\\Programs\\Python\\Python312\\Scripts\\pytest --junitxml=result-unit.xml test\\unit
                                whoami
                            '''
                            junit 'result*.xml'
                        }
                    }
                }

                stage('Rest') {
                    agent{
                    label 'raspi'
                    }
                    steps {
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE' ){
                            sh '''
                                set PYTHONPATH=%WORKSPACE%
                                env FLASK_APP=${WORKSPACE}/app/api.py python -m flask run &
                                java -jar "${WORKSPACE}/test/wiremock/mappings/wiremockstandalone/wiremock-standalone-3.3.1.jar" --port 9090 --root-dir "${WORKSPACE}/test/wiremock" &
                                sleep 10
                                pytest --junitxml=result-rest.xml test/rest
                                
                                ls
                            '''
                            junit 'result*.xml'
                        }
                    }
                }

            }
        }

        stage('Cobertura'){
            agent {
                label 'localWin'
            }
            steps{
                bat '''
                    coverage run --branch --source=app --omit=app\\__init__.py.app\\api.py -m pytest test\\unit 
                    coverage xml
                    dir
                '''
                cobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '100,30,30', lineCoverageTargets: '100,40,40', failUnstable: false
            }
        }        

    }
}
